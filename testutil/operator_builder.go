// Code generated by mockery v1.0.0. DO NOT EDIT.

package testutil

import (
	operator "github.com/open-telemetry/opentelemetry-log-collection/operator"
	mock "github.com/stretchr/testify/mock"
)

// OperatorBuilder is an autogenerated mock type for the Builder type
type OperatorBuilder struct {
	mock.Mock
}

// Build provides a mock function with given fields: _a0
func (_m *OperatorBuilder) Build(_a0 operator.BuildContext) (operator.Operator, error) {
	ret := _m.Called(_a0)

	var r0 operator.Operator
	if rf, ok := ret.Get(0).(func(operator.BuildContext) operator.Operator); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(operator.Operator)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(operator.BuildContext) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ID provides a mock function with given fields:
func (_m *OperatorBuilder) ID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Type provides a mock function with given fields:
func (_m *OperatorBuilder) Type() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
