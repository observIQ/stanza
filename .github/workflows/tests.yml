name: Tests
on:
  pull_request:

jobs:
  unit-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-11, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.21"
          check-latest: true

      # Load caches based on OS
      - name: Linux Cache Go Modules
        if: matrix.os == 'ubuntu-20.04'
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: MacOS Cache Go Modules
        if: matrix.os == 'macos-11'
        uses: actions/cache@v2
        with:
          path: |
            ~/Library/Caches/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Windows Cache Go Modules
        if: matrix.os == 'windows-2019'
        uses: actions/cache@v2
        with:
          path: |
            %LocalAppData%\go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Run darwin and linux tests
      - name: Run Tests
        if: matrix.os != 'windows-2019'
        run: go test -race -coverprofile coverage.txt -coverpkg ./... ./...

      # Run windows tests without cgo, race flag (requires cgo), or coverage
      - name: Run Windows Tests
        if: matrix.os == 'windows-2019'
        run: go test ./...
        env:
          CGO_ENABLED: 0

      - name: Upload Codecov
        # Only submit code coverage if OS is Linux
        if: matrix.os == 'ubuntu-20.04'
        uses: codecov/codecov-action@v2.1.0
        with:
          files: ./coverage.txt
